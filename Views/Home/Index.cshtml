@{
    ViewData["Title"] = "Home Page";
}
<!-- Bring in the model that we are going to use -->
<!-- model IQueryable<Book> -->
@model BookListViewModel
<!-- Give an appropriate title -->
<header class="text-center" style="color:royalblue">
    <h2>Welcome to Will's Online Bookstore!</h2>
</header>

<!-- For the bootstrap, I played around with several table stylings, I like the table-hover best-->
<div class="px-4">
    <table class="table table-hover">
        <thead class="thead-dark">
            <!-- Column titles-->
            <tr class="font-weight-bold">
                <th style="color:whitesmoke">BookID</th>
                <th style="color:whitesmoke">Title</th>
                <th style="color:whitesmoke">Number of Pages</th>
                <th style="color:whitesmoke">Author First Name</th>
                <th style="color:whitesmoke">Author Last Name</th>
                <th style="color:whitesmoke">Publisher</th>
                <th style="color:whitesmoke">ISBN</th>
                <th style="color:whitesmoke">Fiction</th>
                <th style="color:whitesmoke">Category</th>
                <th style="color:whitesmoke">Price</th>
            </tr>
        </thead>
        <tbody>
            <!-- Loop through and list each property for each Book object using a for loop in Razor code -->
            @foreach (var x in Model.Books)
            {
                <tr>
                    <td>@x.BookID</td>
                    <td>@x.Title</td>
                    <td>@x.NumPages</td>
                    <td>@x.AuthorFirst</td>
                    <td>@x.AuthorLast</td>
                    <td>@x.Publisher</td>
                    <td>@x.ISBN</td>
                    <td>@x.Fiction</td>
                    <td>@x.Category</td>
                    <td>$@x.Price</td>
                    <td>
                        <form id="@x.BookID" asp-page="/Cart" method="post">
                            <input type="hidden" asp-for="@x.BookID" />
                            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                            <span class="card-text">
                                <button type="submit" class="btn-success btn-sm">Add to Cart</button>
                            </span>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- ******** NEW BOOTSTRAP FOR ASSIGNMENT 6 *********-->
<!--To practice our bootstrap, let's add a blockquote and use some different classes (blockquote class)-->
<div class="row">
    <div style="padding-left:65px" class="col-6">
        <blockquote class="blockquote text-center rounded-pill" style="background-color:royalblue; color:white">
            <p class="small font font-weight-bold">Reading is to the mind what exercise is to the body.</p>
            <footer class="blockquote-footer font-weight-bolder" style="color:white"><cite title="Source Title" style="color:white">Joseph Addison</cite></footer>
        </blockquote>
    </div>


<!--This column will just take up space because we do not want the pill that the quote is contained in 
    to span the entire length of the screen-->
    <div class="col-4"></div>

<!--Here we will insert the pagination menu for when there are multiple pages-->
    <div class=" col-2">
        <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
             page-class="btn" page-class-normal="btn-outline-dark" page-class-selected="btn-primary"
             page-url-category="@Model.CurrentCategory"
             class="btn-group" role="group">
        </div>
    </div>
</div>

